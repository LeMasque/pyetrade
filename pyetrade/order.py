#!/usr/bin/python3

'''Order - ETrade Order API
   TODO:
       * Preview Equity Order
       * Place equity order - test arg types
       * Preview equity order change
       * Place equity order change
       * Preview option order
       * Place option order
       * Preview option order change
       * Place option order change
       * xml support'''

import logging
from requests_oauthlib import OAuth1Session
from pyetrade.etrade_exception import OrderException
from pyetrade.etrade import ETrade

class ETradeOrder(ETrade):
    '''ETradeOrder'''
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        # Set up logging
        self.log = logging.getLogger(__name__)

    @ETrade.Decorators.etrade_api_request
    def list_orders(self, account_id, response_type='json', **kwargs):
        '''list_orders(dev, resp_format) -> resp
           param: account_id
           type: int
           required: true
           description: Numeric account ID
           param: marker
           type: str
           description: Specify the desired starting point of the set
                of items to return. Used for paging.
           param: count
           type: int
           description: The number of orders to return in a response.
                The default is 25. Used for paging.
           rdescription: see ETrade API docs'''

        return {
            'method': 'GET',
            'uri': self.make_url(
                module='order',
                action='orderlist/{acct_id}'.format(acct_id=account_id),
                response_type=response_type
            ),
            'params': kwargs
        }

    @ETrade.Decorators.etrade_api_request
    def place_equity_order(self, response_type='json', **kwargs):
        '''place_equity_order(dev, resp_format, **kwargs) -> resp
           param: dev
           type: bool
           description: API enviornment
           param: resp_format
           type: str
           description: Response format JSON or None = XML
           kwargs:
           param: accountId
           type: int
           required: true
           description: Numeric account ID
           param: symbol
           type: str
           required: true
           description: The market symbol for the security
                        being bought or sold
           param: orderAction
           type: str
           required: true
           description: The action that the broker is requested
                        to perform Possible values are:
                            * BUY
                            * SELL
                            * BUY_TO_COVER
                            * SELL_SHORT
           param: previewid
           type: long
           required: conditional
           description: If the order was not previewed, this
                        parameter should not be specified. If
                        the order was previewed, this parameter
                        must specify the numeric preview ID from
                        the preview, and other parameters of
                        this request must match the parameters
                        of the preview
           param: clientOrderId
           type: str
           required: true
           description: A reference number generated by the
                        developer. Used to ensure that a
                        duplicate order is not being submitted.
                        It can be any value of 20 alphanmeric
                        characters or less, but must be unique
                        within this account. It does not appear
                        in any API responses.
           param: priceType
           type: str
           required: true
           description: The type of pricing specified in the
                        equity order. Possible values are:
                            * MARKET
                            * LIMIT
                            * STOP
                            * STOP_LIMIT
                            * MARKET_ON_CLOSE
                        If STOP, requires a stopPrice. If LIMIT,
                        requires a limitPrice. if STOP_LIMIT,
                        requires both. For more information
                        on these values, refer to the E-Trade
                        online help on conditional orders
           param: limitPrice
           type: double
           required: conditional
           description: The highest price at which to buy or
                        lowest price at which to sell. Required
                        if priceType is STOP or STOP_LIMIT.
           param: stopPrice
           type: double
           required: conditional
           description: The price at which to buy or sell if
                        specified in a stop order. Required if
                        priceType is STOP or STOP_LIMIT.
           param: allOrNone
           type: bool
           required: optional
           description: If TRUE, the transactions specified in
                        the order must be executed all at once
                        or not at all. Default is FALSE.
           param: quantity
           type: int
           required: true
           description: The number of shares to buy or sell
           param: reserveOrder
           type: bool
           required: optional
           description: If set to TRUE, publicly displays only
                        a limited number of shares (the
                        reserve quantity), instead of the
                        entire order, to avoid influencing
                        other traders. Default is FALSE. If
                        TRUE, must also specify the
                        reserveQuantity.
           param: reserveQuantity
           type: int
           required: conditional
           description: The number of shares to be publicly
                        displayed if this is a reserve order.
                        Required if serveOrder is True.
           param: marketSession
           type: str
           required: true
           description: Session in which the equity order will
                        be placed. Possible values are:
                            * REGULAR
                            * EXTENDED
           param: orderTerm
           type: str
           required: true
           description: Specifies the term for which the order
                        is in effect. Possible values are:
                            * GOOD_UNTIL_CANCEL
                            * GOOD_FOR_DAY
                            * IMMEDIATE_OR_CANCEL (only for
                              limit orders)
                            * FILL_OR_KILL (only for limit
                              orders)
           param: routingDestination
           type: str
           required: optional
           description: The exchange where the order should be
                        executed. Users may want to specify
                        this if they believe they can get a
                        better order fill at a specific exchange
                        rather than relying on automatic order
                        routing system. Posssible values are:
                            * AUTO (default)
                            * ARCA
                            * NSDQ
                            * NYSE
           rparam: accountId
           rtype: int
           rdescription: Numeric account ID
           rparam: allOrNone
           rtype: bool
           rdescription: if True, the transaction specified in
                         the order are to be executed all at
                         once, or not at all
           rparam: estimatedCommission
           rtype: double
           rdescription: The cost billed to the user to preform
                         the requested action
           rparam: estimatedTotalAmount
           rtype: double
           rdescription: The cost or proceeds, including broker
                         commission, resulting from the requested
                         action
           rparam: messageList
           rtype: dict
           rdescription: Container for messages describing the
                         result of the action
            - rparam: msgDesc
              rtype: str
              rdescription: Text of the result message,
                            indicating order status, success or
                            failure, additional requirements
                            that must be met before placing the
                            order, etc. Applications typically
                            display this message to the user,
                            which may result in further user
                            action
            - rparam: msgCode
              rtype: int
              rdescription: Standard numeric code of the result
                            message. Refer to the Error Messages
                            documentation for examples. May
                            optionally be displayed to the user,
                            but is primarily intended for
                            internal use.
           rparam: orderNum
           rtype: int
           rdescription: Numeric ID for this order in the E*TRADE
                         system
           rparam: orderTime
           rtype: long
           rdescription: The time the order was submitted, in
                         epoch time.
           rparam: symbolDesc
           rtype: str
           rdescription: Text description of the security
           rparam: symbol
           rtype: str
           rdescription: The market symbol for the underlier
           rparam: quantity
           rtype: int
           rdescription: The number of shares to buy or sell
           rparam: reserveOrder
           rtype: bool
           rdescription: If TRUE, this is a reserve order -
                         meaning that only a limited number
                         of shares will be publicly displayed,
                         instead of the entire order, to
                         avoid influencing other traders.
           rparam: orderTerm
           rtype: str
           rdescription: Specifies the term for which the
                         order is in effect. Possible values
                         are:
                             * GOOD_UNTIL_CANCEL
                             * GOOD_FOR_DAY
                             * IMMEDIATE_OR_CANCEL (only for
                                limit orders)
                             * FILL_OR_KILL (only for limit
                                orders)
           rparam: orderAction
           rtype: str
           rdescription: The action that the broker is requested
                         to perform. Possible values are:
                             * BUY
                             * SELL
                             * BUY_TO_COVER
                             * SELL_SHORT
           rparam: priceType
           rtype: str
           rdescription: The type of pricing. Possible values are:
                            * MARKET
                            * LIMIT
                            * STOP
                            * STOP_LIMIT
                            * MARKET_ON_CLOSE
           rparam: limitPrice
           rtype: double
           rdescription: The highest price at which to buy or the
                         lowest price at which to sell if specified
                         in a limit order. Returned if priceType is
                         LIMIT
           rparam: stopPrice
           rtype: double
           rdescription: The price at which a stock is to be bought
                         or sold if specified in a stop order.
                         Returned if priceType is STOP.
           rparam: routingDestination
           rtype: str
           rdescription: The exchange where the order should be
                         executed. Possible values are:
                             * AUTO
                             * ARCA
                             * NSDQ
                             * NYSE'''

        required_parameters = [
            'accountId',
            'symbol',
            'orderAction',
            'clientOrderId',
            'priceType',
            'quantity',
            'orderTerm',
            'marketSession'
        ]

        if ETrade.is_missing_requirements(required_parameters, kwargs):
            raise OrderException('missing required parameters')

        # TODO: consider making "is_missing_requirements" handle conditionals

        # STOP / STOP_LIMIT
        if 'STOP' in kwargs['priceType'] and 'stopPrice' not in kwargs:
            raise OrderException

        # LIMIT / STOP_LIMIT
        if 'LIMIT' in kwargs['priceType'] and 'limitPrice' not in kwargs:
            raise OrderException

        return {
            'method': 'POST',
            'url': self.make_url(
                module='order',
                action='placeequityorder'
            ),
            'json': {  # FIXME: This can't be 'json' if the response type isn't json.
                'PlaceEquityOrder': {
                    # TODO: Not documented, shown in examples of API usage however.
                    #'-xmlns': 'http://order.etws.etrade.com',
                    'EquityOrderRequest': kwargs
                }
            }
        }

    @ETrade.Decorators.etrade_api_request
    def cancel_order(self, account_id, order_num, response_type='json'):
        '''cancel_order(account_id, order_num, dev, resp_format)
           param: account_id
           type: int
           description: numeric account id
           param: order_num
           type: int
           description: numeric id for this order in the etrade system
           param: dev
           type: bool
           description: API enviornment
           param: resp_format
           type: str
           description: Response format JSON or None = XML'''

        return {
            'method': 'POST',
            'url': self.make_url(
                module='order',
                action='cancelorder',
                response_type=response_type
            ),
            'json': {  # FIXME: This can't be 'json' if the response type isn't json.
                'cancelOrder': {
                    # TODO: Not documented, shown in examples of API usage however.
                    #'-xmlns': 'http://order.etws.etrade.com',
                    'cancelOrderRequest': {
                        'accountId': account_id,
                        'orderNum': order_num
                    }
                }
            }
        }
